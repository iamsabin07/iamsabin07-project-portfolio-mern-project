{"ast":null,"code":"export default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case 'FETCH_BY_SEARCH':\n      return { ...state,\n        posts: action.payload\n      };\n\n    case 'CREATE':\n      return [...state, action.payload];\n\n    case 'UPDATE':\n    case 'LIKE':\n      return state.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case 'DELETE':\n      return state.filter(post => post._id !== action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/reducers/posts.js"],"names":["state","action","type","posts","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"mappings":"AACA,gBAAe,YAAsB;AAAA,MAArBA,KAAqB,uEAAd,EAAc;AAAA,MAAVC,MAAU;;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeC,IAFnB;AAGHC,QAAAA,WAAW,EAAEL,MAAM,CAACG,OAAP,CAAeE,WAHzB;AAIHC,QAAAA,aAAa,EAAEN,MAAM,CAACG,OAAP,CAAeG;AAJ3B,OAAP;;AAMH,SAAK,iBAAL;AACI,aAAO,EACH,GAAGP,KADA;AAEHG,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAFX,OAAP;;AAIL,SAAK,QAAL;AACK,aAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACG,OAAlB,CAAP;;AACL,SAAK,QAAL;AACA,SAAK,MAAL;AACK,aAAOJ,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IAAvE,CAAP;;AACL,SAAK,QAAL;AACI,aAAOT,KAAK,CAACW,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAA3C,CAAP;;AACJ;AACK,aAAOJ,KAAP;AArBT;AAwBF,CAzBD","sourcesContent":["\nexport default (state= [], action) =>{\n   switch (action.type) {\n       case 'FETCH_ALL':\n           return {\n               ...state,\n               posts: action.payload.data,\n               currentPage: action.payload.currentPage,\n               numberOfPages: action.payload.numberOfPages\n           };\n        case 'FETCH_BY_SEARCH':\n            return {\n                ...state,\n                posts: action.payload\n            };\n       case 'CREATE': \n            return [...state, action.payload];\n       case 'UPDATE':\n       case 'LIKE':\n            return state.map((post) => post._id === action.payload._id ? action.payload : post);\n       case 'DELETE':\n           return state.filter((post) => post._id !== action.payload)\n       default:\n            return state;\n        \n   }\n}"]},"metadata":{},"sourceType":"module"}