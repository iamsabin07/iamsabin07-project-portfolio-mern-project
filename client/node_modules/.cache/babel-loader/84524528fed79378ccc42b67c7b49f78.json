{"ast":null,"code":"var _jsxFileName = \"/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from './styles.js';\nimport { createPost, updatePost } from '../../actions/posts.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId) {\n      var _user$result;\n\n      dispatch(updatePost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" \", currentId ? `Update` : `Submit`, \" your Project\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Project Name\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Project Description\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Form, \"tUclCKZ5GAVeyjNAbFF2qOTDmHg=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from './styles.js';\n\nimport {createPost, updatePost} from '../../actions/posts.js'\n \n\nconst Form = ({currentId, setCurrentId}) => {\n   \n    const [postData, setPostData] = useState({\n     title:'', message:'', tags:'', selectedFile:''\n    });\n    const post = useSelector((state)=> currentId ? state.posts.find((p)=>p._id === currentId) : null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    useEffect(()=>{\n        if(post) setPostData(post);\n    }, [ post])\n\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n\n        if(currentId){\n         dispatch(updatePost({...postData, name: user?.result?.name})); \n         \n         \n        }\n        else{\n        dispatch(createPost({...postData, name: user?.result?.name}));\n        }\n        clear();\n\n    }\n    \n    const clear = () =>{\n        setCurrentId(null);\n        setPostData({\n             title:'', message:'', tags:'', selectedFile:''\n        });\n    }\n\n    if(!user?.result?.name){\n        return (\n            <Paper className = {classes.paper}>\n                <Typography variant = \"h6\" align = \"center\">\n                    Please Sign In\n                </Typography>\n            </Paper>\n        )\n    }\n\n   return( \n   <Paper className={classes.paper}>\n       <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit ={handleSubmit} >\n        <Typography variant =\"h6\"> { currentId ? `Update` : `Submit`} your Project</Typography>\n      \n         <TextField \n        name=\"title\"\n        variant = \"outlined\"\n        label = \"Project Name\"\n        fullWidth\n        value = {postData.title}\n        onChange={(e)=> setPostData({ ...postData, title: e.target.value })}\n        />\n         <TextField \n        name=\"message\"\n        variant = \"outlined\"\n        label = \"Project Description\"\n        fullWidth\n        value = {postData.message}\n        onChange={(e)=> setPostData({ ...postData, message: e.target.value })}\n        />\n         <TextField \n        name=\"tags\"\n        variant = \"outlined\"\n        label = \"Tags\"\n        fullWidth\n        value = {postData.tags}\n        onChange={(e)=> setPostData({ ...postData, tags: e.target.value.split(',') })}\n        />\n        <div className={classes.fileInput}>\n            <FileBase\n                type = \"file\"\n                multiple = {false}\n                onDone = {({base64}) => setPostData({...postData, selectedFile: base64})}\n            /> \n        </div>\n        <Button className={classes.buttonSubmit} variant = \"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>\n            Submit\n        </Button>\n        <Button  variant = \"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>\n            Clear\n        </Button>\n       </form>\n   </Paper>\n   );\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}