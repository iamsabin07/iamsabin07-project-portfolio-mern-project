{"ast":null,"code":"var _jsxFileName = \"/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport useStyles from './styles';\nimport Input from \"./Input\";\nimport Icon from './icon';\nimport { signup, signin } from '../../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(formData, navigate));\n    } else {\n      dispatch(signin(formData, navigate));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      navigate(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Error. Try Again\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Signup' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Signup' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"482080578582-rrfg34sifd4m56g5gdhqjhrdflhj0lk9.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 42\n            }, this),\n            variant: \"contained\",\n            children: \"Sign In with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign In' : 'Dont have an account? Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"tmk4wn7wp7S+dp4DQZ4PbTtssfU=\", false, function () {\n  return [useStyles, useDispatch, useNavigate];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","GoogleLogin","useDispatch","useNavigate","useStyles","Input","Icon","signup","signin","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","formData","setFormData","dispatch","navigate","handleSubmit","e","preventDefault","handleChange","target","name","value","handleShowPassword","prevShowPassword","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,UAAtC,EAAkDC,SAAlD,QAAmE,mBAAnE;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,WAAR,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,MAAR,EAAgBC,MAAhB,QAA4B,oBAA5B;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,QAAQ,EAAC,EAJQ;AAKjBC,EAAAA,eAAe,EAAE;AALA,CAArB;;AAOA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AAEd,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAmCzB,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM,CAAE0B,QAAF,EAAYC,WAAZ,IAA4B3B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAACgB,YAAD,CAAxC;AACA,QAAMc,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,QAAQ,GAAGrB,WAAW,EAA5B;;AAEA,QAAMsB,YAAY,GAAIC,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGR,QAAH,EAAY;AACRI,MAAAA,QAAQ,CAAChB,MAAM,CAACc,QAAD,EAAUG,QAAV,CAAP,CAAR;AACH,KAFD,MAGI;AACAD,MAAAA,QAAQ,CAACf,MAAM,CAACa,QAAD,EAAUG,QAAV,CAAP,CAAR;AACH;AACJ,GARD;;AASA,QAAMI,YAAY,GAAIF,CAAD,IAAM;AACvBJ,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAa,OAACK,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASE;AAAvC,KAAD,CAAX;AACH,GAFD;;AAGA,QAAMC,kBAAkB,GAAG,MAAMd,eAAe,CAAEe,gBAAD,IAAqB,CAACA,gBAAvB,CAAhD;;AAEA,QAAMC,UAAU,GAAG,MAAK;AACpBd,IAAAA,WAAW,CAAEe,YAAD,IAAkB,CAACA,YAApB,CAAX;AACAjB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAHD;;AAIA,QAAMkB,aAAa,GAAG,MAAOC,GAAP,IAAc;AAChC,UAAMC,MAAM,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAApB;AACA,UAAMC,KAAK,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEI,OAAnB;;AAEA,QAAI;AACAlB,MAAAA,QAAQ,CAAC;AACLmB,QAAAA,IAAI,EAAC,MADA;AAELC,QAAAA,IAAI,EAAE;AAAEL,UAAAA,MAAF;AAAUE,UAAAA;AAAV;AAFD,OAAD,CAAR;AAIAhB,MAAAA,QAAQ,CAAC,GAAD,CAAR;AAEH,KAPD,CAOE,OAAOoB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAdD;;AAeA,QAAMG,aAAa,GAAE,MAAK;AACtBF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAFD;;AAGA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAG,MAAvB;AAA8B,IAAA,QAAQ,EAAC,IAAvC;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE9B,OAAO,CAACgC,KAA1B;AAAiC,MAAA,SAAS,EAAG,CAA7C;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAIhC,OAAO,CAACiC,MAA7B;AAAA,+BACA,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,UAAD;AAAY,QAAA,OAAO,EAAG,IAAtB;AAAA,kBACK9B,QAAQ,GAAG,QAAH,GAAc;AAD3B;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAM,QAAA,SAAS,EAAEH,OAAO,CAACkC,IAAzB;AAA+B,QAAA,QAAQ,EAAIzB,YAA3C;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAI,CAA3B;AAAA,qBAEQN,QAAQ,iBACJ;AAAA,oCAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAG,WAAd;AAA0B,cAAA,KAAK,EAAG,YAAlC;AAA+C,cAAA,YAAY,EAAES,YAA7D;AAA2E,cAAA,SAAS,MAApF;AAAqF,cAAA,IAAI;AAAzF;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAG,UAAd;AAAyB,cAAA,KAAK,EAAG,WAAjC;AAA6C,cAAA,YAAY,EAAEA,YAA3D;AAA0E,cAAA,IAAI;AAA9E;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,0BAHZ,eAUI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,KAAK,EAAG,eAA5B;AAA4C,YAAA,YAAY,EAAEA,YAA1D;AAAwE,YAAA,IAAI,EAAG;AAA/E;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,UAAb;AAAwB,YAAA,KAAK,EAAG,UAAhC;AAA2C,YAAA,YAAY,EAAIA,YAA3D;AAAyE,YAAA,IAAI,EAAIX,YAAY,GAAG,MAAH,GAAY,UAAzG;AAAsH,YAAA,kBAAkB,EAAEe;AAA1I;AAAA;AAAA;AAAA;AAAA,kBAXJ,EAYEb,QAAQ,iBACV,QAAC,KAAD;AAAQ,YAAA,IAAI,EAAG,iBAAf;AAAiC,YAAA,KAAK,EAAG,kBAAzC;AAA4D,YAAA,YAAY,EAAES,YAA1E;AAAwF,YAAA,IAAI,EAAG;AAA/F;AAAA;AAAA;AAAA;AAAA,kBAbA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkBI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAG,QAAf;AAAwB,UAAA,SAAS,MAAjC;AAAkC,UAAA,OAAO,EAAG,WAA5C;AAAwD,UAAA,KAAK,EAAG,SAAhE;AAA0E,UAAA,SAAS,EAAGZ,OAAO,CAACmC,MAA9F;AAAA,oBACKhC,QAAQ,GAAG,QAAH,GAAc;AAD3B;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAqBI,QAAC,WAAD;AACI,UAAA,QAAQ,EAAC,0EADb;AAEI,UAAA,MAAM,EAAGiC,WAAD,iBACJ,QAAC,MAAD;AACA,YAAA,SAAS,EAAGpC,OAAO,CAACqC,YADpB;AAEA,YAAA,KAAK,EAAE,SAFP;AAGA,YAAA,SAAS,MAHT;AAIA,YAAA,OAAO,EAAED,WAAW,CAACE,OAJrB;AAKA,YAAA,QAAQ,EAAEF,WAAW,CAACG,QALtB;AAMA,YAAA,SAAS,eAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,oBANb;AAOA,YAAA,OAAO,EAAG,WAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAcI,UAAA,SAAS,EAAInB,aAdjB;AAeI,UAAA,SAAS,EAAIW,aAfjB;AAgBI,UAAA,YAAY,EAAG;AAhBnB;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAuCI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,cAAc,EAAG,UAAjC;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEb,UAAjB;AAAA,wBACKf,QAAQ,GAAG,kCAAH,GAAwC;AADrD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6DH,CA1GD;;GAAMJ,I;UAEcX,S,EAICF,W,EACAC,W;;;KAPfY,I;AA4GN,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\";\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport {GoogleLogin} from 'react-google-login';\nimport { useDispatch } from \"react-redux\";\nimport {useNavigate } from \"react-router-dom\";\nimport useStyles from './styles';\n\nimport Input from \"./Input\";\nimport Icon from './icon';\nimport {signup, signin} from'../../actions/auth'; \n\nconst initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password:'',\n    confirmPassword: ''\n}\nconst Auth = () =>{\n \n    const classes = useStyles();\n    const [showPassword, setShowPassword ] = useState(false);\n    const [ isSignup, setIsSignup ] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if(isSignup){\n            dispatch(signup(formData,navigate))\n        } \n        else{\n            dispatch(signin(formData,navigate))\n        }\n    };\n    const handleChange = (e) =>{\n        setFormData({...formData,[e.target.name]: e.target.value });\n    };\n    const handleShowPassword = () => setShowPassword((prevShowPassword)=> !prevShowPassword);\n\n    const switchMode = () =>{\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        setShowPassword(false);\n    }\n    const googleSuccess = async (res) =>{\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n\n        try {\n            dispatch({\n                type:'AUTH',\n                data: { result, token}\n            });\n            navigate(\"/\");\n           \n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const googleFailure =() =>{\n        console.log(\"Error. Try Again\")\n    }\n    return (\n        <Container component = \"main\" maxWidth=\"xs\">    \n            <Paper className={classes.paper} elevation ={3}>\n                <Avatar className = {classes.avatar}>\n                <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant = \"h5\">\n                    {isSignup ? 'Signup' : 'Sign In'}\n                </Typography>\n                <form className={classes.form} onSubmit = {handleSubmit}>\n                    <Grid container spacing = {2}>\n                        {\n                            isSignup && (\n                                <>\n                                \n                                    <Input name = \"firstName\" label = \"First Name\" handleChange={handleChange} autoFocus half />\n                                    <Input name = \"lastName\" label = \"Last Name\" handleChange={handleChange}  half />\n                                </>\n                            )\n                        }\n                        <Input name=\"email\" label = \"Email Address\" handleChange={handleChange} type = \"email\" />\n                        <Input name= \"password\" label = \"Password\" handleChange = {handleChange} type = {showPassword ? \"text\" : \"password\" } handleShowPassword={handleShowPassword}/>\n                    { isSignup && \n                    <Input  name = \"confirmPassword\" label = \"Confirm Password\" handleChange={handleChange} type = \"password\"/>\n                    }\n                    </Grid>\n                \n                    <Button type = \"submit\" fullWidth variant = \"contained\" color = \"primary\" className= {classes.submit}>\n                        {isSignup ? 'Signup' : 'Sign In'}\n                    </Button>\n                    <GoogleLogin \n                        clientId=\"482080578582-rrfg34sifd4m56g5gdhqjhrdflhj0lk9.apps.googleusercontent.com\"\n                        render={(renderProps)=>(\n                            <Button \n                            className ={classes.googleButton} \n                            color= \"primary\" \n                            fullWidth \n                            onClick={renderProps.onClick} \n                            disabled={renderProps.disabled} \n                            startIcon = {<Icon />} \n                            variant = \"contained\">\n                                Sign In with Google\n                            </Button>\n                        )}\n                        onSuccess = {googleSuccess}\n                        onFailure = {googleFailure}\n                        cookiePolicy = \"single_host_origin\"\n                    />\n                    <Grid container justifyContent = \"flex-end\">\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                {isSignup ? 'Already have an account? Sign In' : 'Dont have an account? Sign Up'}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    );\n\n\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}