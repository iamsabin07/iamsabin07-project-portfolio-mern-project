{"ast":null,"code":"import React,{useEffect}from\"react\";import{Card,Paper,Typography,CircularProgress,Divider}from\"@material-ui/core\";import{useDispatch,useSelector}from\"react-redux\";import moment from'moment';import{useNavigate,useParams,Link}from\"react-router-dom\";import{getPost,getPostsBySearch}from\"../../actions/posts\";import CommentSection from\"./CommentSection\";import useStyles from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostDetails=function PostDetails(){var _useSelector=useSelector(function(state){return state.posts;}),post=_useSelector.post,posts=_useSelector.posts,isLoading=_useSelector.isLoading;var dispatch=useDispatch();var navigate=useNavigate();var classes=useStyles();var _useParams=useParams(),id=_useParams.id;useEffect(function(){dispatch(getPost(id));},[id]);useEffect(function(){if(post){dispatch(getPostsBySearch({search:post.name}));}},[post]);if(!post)return null;if(isLoading){return/*#__PURE__*/_jsx(Paper,{elevation:6,className:classes.loadingPaper,children:/*#__PURE__*/_jsx(CircularProgress,{size:\"7em\"})});}var recommendedPosts=posts.filter(function(_ref){var _id=_ref._id;return _id!==post._id;});var openPost=function openPost(_id){return navigate(\"/posts/\".concat(_id));};return/*#__PURE__*/_jsxs(Paper,{style:{padding:'20px',borderRadius:'15px'},elevation:6,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.card,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.section,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h2\",children:post.title}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Created by: \",post.name]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,variant:\"body1\",color:\"textSecondary\",component:\"h2\",children:[\"Languages Used: \",post.tags.map(function(tag){return\"\".concat(tag,\" \");})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,variant:\"body1\",component:\"p\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Overview: \"}),post.message]}),/*#__PURE__*/_jsx(\"br\",{}),post.links&&/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,variant:\"body1\",component:\"p\",children:[\"Source Code: \",/*#__PURE__*/_jsxs(\"a\",{href:post.links,target:\"_blank\",children:[\" \",post.links]})]}),/*#__PURE__*/_jsx(Divider,{style:{margin:'20px 0'}}),/*#__PURE__*/_jsx(CommentSection,{post:post}),/*#__PURE__*/_jsx(Divider,{style:{margin:'20px 0'}})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.imageSection,children:/*#__PURE__*/_jsx(\"img\",{className:classes.media,src:post.selectedFile||'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',alt:post.title})})]}),recommendedPosts.length&&/*#__PURE__*/_jsxs(\"div\",{className:classes.section,children:[/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,variant:\"h5\",children:[\" More from \",post.name,\":\"]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.recommendedPosts,children:recommendedPosts.map(function(_ref2){var title=_ref2.title,message=_ref2.message,name=_ref2.name,likes=_ref2.likes,selectedFile=_ref2.selectedFile,_id=_ref2._id;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{style:{margin:'20px',cursor:\"pointer\"},onClick:function onClick(){return openPost(_id);},children:/*#__PURE__*/_jsxs(Card,{className:classes.card2,raised:true,elevation:6,children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",align:\"center\",children:title}),/*#__PURE__*/_jsx(\"img\",{src:selectedFile,width:\"100%\",height:\"100%\"})]})},_id)});})})]})]});};export default PostDetails;","map":{"version":3,"sources":["/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Card","Paper","Typography","CircularProgress","Divider","useDispatch","useSelector","moment","useNavigate","useParams","Link","getPost","getPostsBySearch","CommentSection","useStyles","PostDetails","state","posts","post","isLoading","dispatch","navigate","classes","id","search","name","loadingPaper","recommendedPosts","filter","_id","openPost","padding","borderRadius","card","section","title","tags","map","tag","message","links","margin","imageSection","media","selectedFile","length","likes","cursor","card2"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { Card, Paper, Typography, CircularProgress, Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from 'moment';\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\n\nimport { getPost, getPostsBySearch } from \"../../actions/posts\";\nimport CommentSection from \"./CommentSection\";\nimport useStyles from './styles';\n\nconst PostDetails = () =>{\n    const {post, posts, isLoading} = useSelector((state) => state.posts);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const classes = useStyles();\n    const {id} = useParams();\n\n    useEffect(() =>{\n        dispatch(getPost(id));\n    }, [id]);\n\n    useEffect(() =>{\n      if(post){\n      dispatch(getPostsBySearch({search: post.name}));\n      }\n    }, [post]);\n\n    if(!post) return null;\n    \n    if (isLoading) {\n        return (\n          <Paper elevation={6} className={classes.loadingPaper}>\n            <CircularProgress size=\"7em\" />\n          </Paper>\n        );\n      }\n\n    const recommendedPosts = posts.filter(({_id}) => _id !== post._id)\n\n    const openPost = (_id) => navigate(`/posts/${_id}`);\n\n    return(\n      <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n       <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n          <br/>\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <br/>\n          <Typography gutterBottom variant=\"body1\" color=\"textSecondary\" component=\"h2\">Languages Used: {post.tags.map((tag) => `${tag} `)}</Typography>\n          <br />\n         \n          <Typography gutterBottom variant=\"body1\" component=\"p\"><strong>Overview: </strong>{post.message}</Typography>\n          <br />\n          {post.links &&(<Typography gutterBottom variant=\"body1\" component=\"p\">Source Code: < a href = {post.links} target=\"_blank\"> {post.links}</a></Typography>)}\n          \n         \n          <Divider style={{ margin: '20px 0' }} />\n          <CommentSection post = {post} />\n          <Divider style={{ margin: '20px 0' }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n        </div>\n      </div>\n      {recommendedPosts.length &&(\n        <div className= {classes.section}>\n          <Typography gutterBottom variant = \"h5\"> More from {post.name}:</Typography>\n          <Divider />\n          <div className= {classes.recommendedPosts}>\n              {recommendedPosts.map(({title, message, name, likes, selectedFile, _id})=>(\n                <div>\n                  <div style = {{margin: '20px', cursor: \"pointer\"}} onClick = {() => openPost(_id)} key = {_id}>\n                  <Card className= {classes.card2} raised elevation ={6}>\n                  <Typography gutterBottom variant=\"h6\" align=\"center\">{title}</Typography>\n                  <img src={selectedFile} width=\"100%\" height = \"100%\" />\n                  </Card>\n                   </div> \n                   \n                  </div>\n              ))}\n          </div>\n        </div>\n      )}\n      </Paper>\n    );\n}\n\nexport default PostDetails;"]},"metadata":{},"sourceType":"module"}