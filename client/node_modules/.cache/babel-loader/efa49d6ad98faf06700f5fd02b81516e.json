{"ast":null,"code":"var _jsxFileName = \"/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from './styles.js';\nimport { createPost, updatePost } from '../../actions/posts.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \" Submit your Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator of the Project\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Name of the Project\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Description\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Form, \"5I8uQis0iPzqhmQ7KkIC+A2uex0=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from './styles.js';\n\nimport {createPost, updatePost} from '../../actions/posts.js'\n\n\nconst Form = ({currentId, setCurrentId}) => {\n   \n    const [postData, setPostData] = useState({\n        creator: '', title:'', message:'', tags:'', selectedFile:''\n    });\n    const post = useSelector((state)=> currentId ? state.posts.find((p)=>p._id === currentId) : null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    \n    useEffect(()=>{\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n\n        if(currentId){\n         dispatch(updatePost(currentId,postData)); \n        }\n        else{\n        dispatch(createPost(postData));\n        }\n        \n    }\n    \n    const clear = () =>{\n\n    }\n   return( \n   <Paper className={classes.paper}>\n       <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit ={handleSubmit} >\n        <Typography variant =\"h6\"> Submit your Project</Typography>\n        <TextField \n        name=\"creator\"\n        variant = \"outlined\"\n        label = \"Creator of the Project\"\n        fullWidth\n        value = {postData.creator}\n        onChange={(e)=> setPostData({ ...postData, creator: e.target.value })}\n        />\n         <TextField \n        name=\"title\"\n        variant = \"outlined\"\n        label = \"Name of the Project\"\n        fullWidth\n        value = {postData.title}\n        onChange={(e)=> setPostData({ ...postData, title: e.target.value })}\n        />\n         <TextField \n        name=\"message\"\n        variant = \"outlined\"\n        label = \"Description\"\n        fullWidth\n        value = {postData.message}\n        onChange={(e)=> setPostData({ ...postData, message: e.target.value })}\n        />\n         <TextField \n        name=\"tags\"\n        variant = \"outlined\"\n        label = \"Tags\"\n        fullWidth\n        value = {postData.tags}\n        onChange={(e)=> setPostData({ ...postData, tags: e.target.value })}\n        />\n        <div className={classes.fileInput}>\n            <FileBase\n                type = \"file\"\n                multiple = {false}\n                onDone = {({base64}) => setPostData({...postData, selectedFile: base64})}\n            /> \n        </div>\n        <Button className={classes.buttonSubmit} variant = \"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>\n            Submit\n        </Button>\n        <Button  variant = \"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>\n            Clear\n        </Button>\n       </form>\n   </Paper>\n   );\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}