{"ast":null,"code":"import _toConsumableArray from\"/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:true,posts:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'FETCH_ALL':return _objectSpread(_objectSpread({},state),{},{posts:action.payload.data,currentPage:action.payload.currentPage,numberOfPages:action.payload.numberOfPages});case'FETCH_POST':return _objectSpread(_objectSpread({},state),{},{post:action.payload});case'FETCH_BY_SEARCH':return _objectSpread(_objectSpread({},state),{},{posts:action.payload});case'CREATE':return _objectSpread(_objectSpread({},state),{},{posts:[].concat(_toConsumableArray(state.posts),[action.payload])});case'UPDATE':case'LIKE':return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===action.payload._id?action.payload:post;})});case'DELETE':return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==action.payload;})});case'COMMENT':return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){if(post._id===action.payload._id){return action.payload;}return post;})});case'START_LOADING':return _objectSpread(_objectSpread({},state),{},{isLoading:true});case'END_LOADING':return _objectSpread(_objectSpread({},state),{},{isLoading:false});default:return state;}});","map":{"version":3,"sources":["/Users/sabinthapa/Desktop/project-portfolio-mern-application/client/src/reducers/posts.js"],"names":["state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"yTACA,eAAe,UAAgD,IAA/CA,CAAAA,KAA+C,2DAAxC,CAACC,SAAS,CAAE,IAAZ,CAAkBC,KAAK,CAAE,EAAzB,CAAwC,IAAVC,CAAAA,MAAU,2CAC5D,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,WAAL,CACI,sCACOJ,KADP,MAEIE,KAAK,CAAEC,MAAM,CAACE,OAAP,CAAeC,IAF1B,CAGIC,WAAW,CAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHhC,CAIIC,aAAa,CAAEL,MAAM,CAACE,OAAP,CAAeG,aAJlC,GAMH,IAAK,YAAL,CACI,sCACOR,KADP,MAEIS,IAAI,CAAEN,MAAM,CAACE,OAFjB,GAIJ,IAAK,iBAAL,CACI,sCACOL,KADP,MAEIE,KAAK,CAAEC,MAAM,CAACE,OAFlB,GAIL,IAAK,QAAL,CACK,sCACOL,KADP,MAEIE,KAAK,8BAAKF,KAAK,CAACE,KAAX,GAAkBC,MAAM,CAACE,OAAzB,EAFT,GAIL,IAAK,QAAL,CACA,IAAK,MAAL,CACK,sCACOL,KADP,MAEIE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,SAACD,IAAD,QAAUA,CAAAA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,CAAkCR,MAAM,CAACE,OAAzC,CAAmDI,IAA7D,EAAhB,CAFX,GAIL,IAAK,QAAL,CACI,sCACOT,KADP,MAEKE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAmB,SAACH,IAAD,QAAUA,CAAAA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAA9B,EAAnB,CAFZ,GAIH,IAAK,SAAL,CACI,sCACOL,KADP,MAEIE,KAAK,CAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,SAACD,IAAD,CAAS,CAC5B,GAAGA,IAAI,CAACE,GAAL,GAAaR,MAAM,CAACE,OAAP,CAAeM,GAA/B,CAAmC,CAC/B,MAAOR,CAAAA,MAAM,CAACE,OAAd,CACH,CACD,MAAOI,CAAAA,IAAP,CACH,CALM,CAFX,GASL,IAAK,eAAL,CACK,sCACOT,KADP,MAEIC,SAAS,CAAE,IAFf,GAIL,IAAK,aAAL,CACC,sCACOD,KADP,MAEIC,SAAS,CAAE,KAFf,GAID,QACK,MAAOD,CAAAA,KAAP,CAvDT,CA0DF,CA3DD","sourcesContent":["\nexport default (state= {isLoading: true, posts: []}, action) =>{\n   switch (action.type) {\n       case 'FETCH_ALL':\n           return {\n               ...state,\n               posts: action.payload.data,\n               currentPage: action.payload.currentPage,\n               numberOfPages: action.payload.numberOfPages\n           };\n        case 'FETCH_POST':\n            return {\n                ...state,\n                post: action.payload\n            }\n        case 'FETCH_BY_SEARCH':\n            return {\n                ...state,\n                posts: action.payload\n            };\n       case 'CREATE': \n            return {\n                ...state, \n                posts:[...state.posts, action.payload]\n            };\n       case 'UPDATE':\n       case 'LIKE':\n            return { \n                ...state, \n                posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)\n            };\n       case 'DELETE':\n           return { \n               ...state,\n                posts: state.posts.filter((post) => post._id !== action.payload)\n            };\n        case 'COMMENT':\n            return {\n                ...state,\n                posts: state.posts.map((post) =>{\n                    if(post._id === action.payload._id){\n                        return action.payload\n                    }\n                    return post;\n                })\n            };\n       case 'START_LOADING':\n            return{\n                ...state,\n                isLoading: true\n            };\n       case 'END_LOADING':\n        return{\n            ...state,\n            isLoading: false\n        };\n       default:\n            return state;\n        \n   }\n}"]},"metadata":{},"sourceType":"module"}